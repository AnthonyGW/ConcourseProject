groups:
- name: ci_tasks
  jobs:
  - cpbackend_ci_tests
  - cpbackend_integration_test
  - cache
  - cpfrontend_ci_tests
  - cpfrontend_integration_test
- name: cd_tasks
  jobs:
  - cpbackend_deploy_testing
  - cpfrontend_deploy_testing

resource_types:
  - name: npm-cache
    type: docker-image
    source: 
      repository: devdavid/npm-cache-resource
      tag: "latest"

resources:
- name: cp_github_repo
  type: git
  source: &repo_source
    uri: https://github.com/AnthonyGW/ConcourseProject.git
    branch: testing

- name: npm-repo-cache
  type: npm-cache
  source:
    <<: *repo_source
    project-path: src_frontend/
    paths:
    - package.json

- name: cpbackend_build
  type: git
  source:
    uri: https://github.com/AnthonyGW/BackendBuild.git
    branch: testing
    private_key: |
      ((private-repo-key))

- name: cpfrontend_build
  type: git
  source:
    uri: https://github.com/AnthonyGW/FrontendBuild.git
    branch: testing
    private_key: |
      ((private-repo-key))

jobs:
- name: cpbackend_ci_tests
  serial: true
  serial_groups: [ci-one]
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
  - task: run_backend_tests
    file: cp_github_repo/src_backend/ci/Scripts/unit_task.yml

- name: cpbackend_integration_test
  serial: true
  serial_groups: [ci-one]
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
  - task: run_backend_integration_test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Make a new task yml and execute bash script to run merge test"]

- name: cpbackend_deploy_testing
  serial: true
  serial_groups: [ci-one]
  plan:
  - get: cpbackend_build
    trigger: true
  - task: deploy_backend_to_testing_server
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Execute script to remake the infrastructure and deploy the built code"]
    

- name: cache
  serial: true
  plan:
  - get: cp_github_repo
    trigger: true
  - get: npm-repo-cache

- name: cpfrontend_ci_tests
  serial: true
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
      passed: [cache]
    - get: npm-repo-cache
      passed: [cache]
  - task: run_frontend_tests
    file: cp_github_repo/src_frontend/ci/Scripts/unit_task.yml
  - put: cpfrontend_build

- name: cpfrontend_integration_test
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
      passed: [cpfrontend_ci_tests]
    - get: npm-repo-cache
      passed: [cache]
    - get: cpfrontend_build
  - task: run_frontend_integration_test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Make a new task yml and execute bash script to run merge test"]

- name: cpfrontend_deploy_testing
  serial: true
  plan:
  - get: cpfrontend_build
    trigger: true
    passed: [cpfrontend_integration_test]
  - task: deploy_frontend_to_testing_server
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Execute script to remake the infrastructure and deploy the built code"]
