resource_types:

  - name: npm-cache
    type: docker-image
    source:
      repository: ymedlop/npm-cache-resource
      tag: latest

resources:
- name: cp_github_repo
  type: git
  source: &repo_source
    uri: https://github.com/AnthonyGW/ConcourseProject.git
    branch: testing

- name: npm_repo_cache
  type: npm-cache
  source:
    <<: *repo_source
    project-path: src_frontend/
    paths:
    - package.json

- name: cpbackend_build
  type: git

- name: cpfrontend_build
  type: git

jobs:
- name: cpbackend_ci_tests
  serial: true
  serial_groups: [group-one]
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: false
  - task: run_backend_tests
    file: cp_github_repo/src_backend/ci/Scripts/unit_task.yml
  - put: cpbackend_build

- name: cpbackend_integration_test
  serial: true
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
      passed: [cpbackend_ci_tests]
  - task: run_backend_integration_test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Make a new task yml and execute bash script to run merge test"]

- name: cpbackend_deploy_testing
  serial: true
  plan:
  - get: cpbackend_build
    trigger: true
  - task: deploy_backend_to_testing_server
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Execute script to remake the infrastructure and deploy the built code"]

- name: cache
  plan:
  - get: cp_github_repo
    trigger: true
  - get: npm_repo_cache

- name: cpfrontend_ci_tests
  serial: true
  serial_groups: [group-two]
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
      passed: [cache]
    - get: npm_repo_cache
      passed: [cache]
  - task: run_frontend_tests
    file: cp_github_repo/src_frontend/ci/Scripts/unit_task.yml
  - put: cpfrontend_build

- name: cpfrontend_integration_test
  plan:
  - aggregate:
    - get: cp_github_repo
      trigger: true
      passed: [cpfrontend_ci_tests]
    - get: npm_repo_cache
      passed: [cache]
  - task: run_frontend_integration_test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Make a new task yml and execute bash script to run merge test"]

- name: cpfrontend_deploy_testing
  serial: true
  plan:
  - get: cpfrontend_build
    trigger: true
  - task: deploy_frontend_to_testing_server
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["Execute script to remake the infrastructure and deploy the built code"]
